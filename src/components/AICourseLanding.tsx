import React, { useState, useEffect } from 'react';
import { ChevronDown, CheckCircle, Star, Users, Award, Clock, DollarSign, Code, Zap, Target, Smartphone, Shield, ArrowRight, Play, X, Cpu, Bot, Phone, MapPin, MessageCircle } from 'lucide-react';
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import heroImage from "@/assets/hero-ai-course.jpg";
import robotBg from "@/assets/robot-bg.jpg";
const AICourseLanding = () => {
  const [timeLeft, setTimeLeft] = useState({
    hours: 47,
    minutes: 59,
    seconds: 32
  });
  const [activeTestimonial, setActiveTestimonial] = useState(0);
  const [activeFAQ, setActiveFAQ] = useState<number | null>(null);

  // Countdown timer
  useEffect(() => {
    const timer = setInterval(() => {
      setTimeLeft(prev => {
        if (prev.seconds > 0) {
          return {
            ...prev,
            seconds: prev.seconds - 1
          };
        } else if (prev.minutes > 0) {
          return {
            ...prev,
            minutes: prev.minutes - 1,
            seconds: 59
          };
        } else if (prev.hours > 0) {
          return {
            hours: prev.hours - 1,
            minutes: 59,
            seconds: 59
          };
        }
        return prev;
      });
    }, 1000);
    return () => clearInterval(timer);
  }, []);

  // Auto-rotate testimonials
  useEffect(() => {
    const interval = setInterval(() => {
      setActiveTestimonial(prev => (prev + 1) % testimonials.length);
    }, 5000);
    return () => clearInterval(interval);
  }, []);
  const stats = [{
    icon: Zap,
    text: "7 ng√†y ‚Üí MVP ho√†n ch·ªânh",
    color: "text-accent"
  }, {
    icon: Target,
    text: "0 ki·∫øn th·ª©c ‚Üí Build ƒë∆∞·ª£c app",
    color: "text-primary"
  }, {
    icon: DollarSign,
    text: "$30/th√°ng ‚Üí Thay v√¨ $5000/th√°ng thu√™ dev",
    color: "text-secondary"
  }];
  const painPoints = [{
    icon: "üò©",
    text: "C√≥ √Ω t∆∞·ªüng hay nh∆∞ng kh√¥ng bi·∫øt code"
  }, {
    icon: "üí∏",
    text: "Thu√™ developer qu√° ƒë·∫Øt (3000-5000$/th√°ng)"
  }, {
    icon: "‚è∞",
    text: "H·ªçc l·∫≠p tr√¨nh m·∫•t 2-3 nƒÉm"
  }, {
    icon: "ü§Ø",
    text: "C√°c tutorial online qu√° ph·ª©c t·∫°p v√† l·ªói th·ªùi"
  }];
  const beforeAfter = [{
    before: "H·ªçc code 2-3 nƒÉm",
    after: "H·ªçc quy tr√¨nh 1-2 tu·∫ßn"
  }, {
    before: "Vi·∫øt t·ª´ng d√≤ng code th·ªß c√¥ng",
    after: "AI vi·∫øt code, b·∫°n ch·ªâ ƒë·∫°o"
  }, {
    before: "6+ th√°ng cho 1 d·ª± √°n",
    after: "7 ng√†y cho MVP"
  }, {
    before: "Thu√™ dev $3000-5000/th√°ng",
    after: "T·ª± l√†m v·ªõi cost $30/th√°ng"
  }, {
    before: "Kh√¥ng bi·∫øt b·∫Øt ƒë·∫ßu t·ª´ ƒë√¢u",
    after: "Roadmap r√µ r√†ng t·ª´ng b∆∞·ªõc"
  }];
  const curriculum = [{
    title: "KI·∫æN TH·ª®C N·ªÄN T·∫¢NG",
    icon: "üìö",
    lessons: 3,
    items: ["AI trong l·∫≠p tr√¨nh l√† g√¨?", "MVP vs S·∫£n ph·∫©m ho√†n ch·ªânh", "B·ªô c√¥ng c·ª• AI c·∫ßn thi·∫øt"]
  }, {
    title: "CHU·∫®N B·ªä D·ª∞ √ÅN",
    icon: "üéØ",
    lessons: 2,
    items: ["Vi·∫øt PRD - B·∫£n thi·∫øt k·∫ø s·∫£n ph·∫©m", "Chia nh·ªè c√¥ng vi·ªác v·ªõi TaskMaster"]
  }, {
    title: "TH·ª∞C HI·ªÜN",
    icon: "‚ö°",
    lessons: 2,
    items: ["Coding v·ªõi Claude - T·ª´ng b∆∞·ªõc m·ªôt", "Review v√† s·ª≠a l·ªói v·ªõi CodeRabbit"]
  }, {
    title: "D·ª∞ √ÅN TH·ª∞C T·∫æ",
    icon: "üöÄ",
    lessons: 2,
    items: ["X√¢y d·ª±ng website b√°n h√†ng ƒë·∫ßu ti√™n", "T·ªëi ∆∞u h√≥a v√† c·∫£i thi·ªán"]
  }];
  const projectFeatures = [{
    icon: "üè†",
    text: "Trang ch·ªß responsive ƒë·∫πp m·∫Øt"
  }, {
    icon: "üõçÔ∏è",
    text: "Catalog s·∫£n ph·∫©m v·ªõi search"
  }, {
    icon: "üõí",
    text: "Gi·ªè h√†ng v√† checkout ho√†n ch·ªânh"
  }, {
    icon: "üì±",
    text: "Mobile-friendly 100%"
  }, {
    icon: "‚ö°",
    text: "T·ªëc ƒë·ªô t·∫£i nhanh (<3s)"
  }, {
    icon: "üîí",
    text: "An to√†n v√† b·∫£o m·∫≠t"
  }];
  const testimonials = [{
    rating: 5,
    text: "T√¥i t·ª´ kh√¥ng bi·∫øt g√¨ v·ªÅ code ƒë·∫øn c√≥ website b√°n h√†ng ho√†n ch·ªânh ch·ªâ trong 10 ng√†y. AI th·ª±c s·ª± th·∫ßn k·ª≥!",
    author: "Minh Anh",
    role: "Owner ti·ªám b√°nh"
  }, {
    rating: 5,
    text: "Kh√≥a h·ªçc th·ª±c t·∫ø nh·∫•t t√¥i t·ª´ng tham gia. Kh√¥ng l√Ω thuy·∫øt su√¥ng, to√†n b·ªô l√† hands-on practice.",
    author: "ƒê·ª©c Th√†nh",
    role: "Freelancer"
  }, {
    rating: 5,
    text: "Sau kh√≥a h·ªçc, t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c 3 d·ª± √°n l√†m website cho b·∫°n b√®. ROI thu h·ªìi trong 1 th√°ng!",
    author: "Thu H∆∞∆°ng",
    role: "Marketing Manager"
  }];
  const faqs = [{
    question: "T√¥i ho√†n to√†n kh√¥ng bi·∫øt code, c√≥ h·ªçc ƒë∆∞·ª£c kh√¥ng?",
    answer: "Kh√≥a h·ªçc ƒë∆∞·ª£c thi·∫øt k·∫ø d√†nh ri√™ng cho ng∆∞·ªùi m·ªõi. B·∫°n ch·ªâ c·∫ßn bi·∫øt s·ª≠ d·ª•ng m√°y t√≠nh c∆° b·∫£n."
  }, {
    question: "C·∫ßn nh·ªØng c√¥ng c·ª• g√¨ v√† t·ªën bao nhi·ªÅu ti·ªÅn?",
    answer: "T·ªïng cost tools kho·∫£ng $30/th√°ng. C√≥ th·ªÉ d√πng free trial ƒë·ªÉ ho√†n th√†nh kh√≥a h·ªçc."
  }, {
    question: "7 ng√†y c√≥ th·∫≠t s·ª± ƒë·ªß kh√¥ng?",
    answer: "7 ng√†y cho MVP c∆° b·∫£n. N·∫øu mu·ªën polish h∆°n c√≥ th·ªÉ m·∫•t 2-3 tu·∫ßn. V·∫´n nhanh h∆°n 10x so v·ªõi c√°ch truy·ªÅn th·ªëng."
  }, {
    question: "Sau kh√≥a h·ªçc c√≥ support kh√¥ng?",
    answer: "Support 1-1 trong 30 ng√†y + c·ªông ƒë·ªìng h·ªçc vi√™n private lifetime."
  }, {
    question: "N·∫øu kh√¥ng h√†i l√≤ng th√¨ sao?",
    answer: "Ho√†n ti·ªÅn 100% trong 30 ng√†y, kh√¥ng c·∫ßn l√Ω do."
  }];
  const socialProof = [{
    number: "1000+",
    label: "H·ªçc vi√™n th√†nh c√¥ng"
  }, {
    number: "4.9/5",
    label: "ƒê√°nh gi√° trung b√¨nh"
  }, {
    number: "95%",
    label: "Ho√†n th√†nh kh√≥a h·ªçc"
  }, {
    number: "200+",
    label: "MVP ƒë√£ ƒë∆∞·ª£c deploy"
  }];
  const scrollToSection = (sectionId: string) => {
    document.getElementById(sectionId)?.scrollIntoView({
      behavior: 'smooth'
    });
  };
  return <div className="min-h-screen bg-background text-foreground overflow-x-hidden robot-grid scanlines">
      {/* Robot Header */}
      <header className="fixed top-0 left-0 right-0 z-50 robot-card border-b border-primary/20">
        <div className="container mx-auto py-3 flex justify-between items-center px-[91px]">
          <div className="flex items-center gap-3">
            <Bot className="w-8 h-8 text-primary robot-pulse" />
            <div data-text="AI COURSE" className="text-xl font-bold holographic robot-text mx-0">AI COURSE</div>
          </div>
          
        </div>
      </header>

      {/* Section 1: Hero */}
      <section id="hero" className="hero-gradient min-h-screen flex items-center relative pt-20">
        <div className="absolute inset-0 bg-cover bg-center bg-no-repeat opacity-10" style={{
        backgroundImage: `url(${heroImage})`
      }} />
        <div className="container mx-auto px-4 py-20 relative z-10">
          <div className="max-w-4xl mx-auto text-center">
            <h1 className="text-5xl md:text-7xl font-bold mb-6 leading-tight">
              X√¢y d·ª±ng ·ª©ng d·ª•ng v·ªõi <span className="text-gradient">AI t·ª´ A-Z</span>
              <br />
              <span className="text-3xl md:text-5xl text-muted-foreground">
                Kh√¥ng c·∫ßn bi·∫øt l·∫≠p tr√¨nh
              </span>
            </h1>
            
            <p className="text-xl md:text-2xl text-muted-foreground mb-8 max-w-3xl mx-auto leading-relaxed">
              T·ª´ √Ω t∆∞·ªüng ƒë·∫øn MVP ho√†n ch·ªânh trong 7 ng√†y
              <br />
              S·ª≠ d·ª•ng Claude, ChatGPT v√† c√°c AI tools m·ªõi nh·∫•t
            </p>

            {/* Stats Row */}
            <div className="grid md:grid-cols-3 gap-6 mb-12">
              {stats.map((stat, index) => <Card key={index} className="robot-card">
                  <CardContent className="p-6 text-center relative z-10">
                    <stat.icon className={`w-8 h-8 mx-auto mb-3 ${stat.color} robot-pulse`} />
                    <p className="font-semibold text-lg robot-text">{stat.text}</p>
                    <div className="loading-bar mt-4"></div>
                  </CardContent>
                </Card>)}
            </div>

            {/* CTA Buttons */}
            <div className="flex flex-col sm:flex-row gap-4 justify-center mb-12">
              <Button size="lg" className="robot-btn bg-primary text-primary-foreground text-lg px-8 py-4 relative" onClick={() => scrollToSection('pricing')}>
                <Cpu className="mr-2 w-5 h-5 robot-pulse" />
                ƒêƒÇNG K√ù NGAY - 14.999.000 ƒë
                <ArrowRight className="ml-2 w-5 h-5" />
              </Button>
              <Button size="lg" variant="outline" className="robot-card border-primary text-primary hover:bg-primary/10 text-lg px-8 py-4" onClick={() => scrollToSection('curriculum')}>
                XEM CHI TI·∫æT KH√ìA H·ªåC
              </Button>
            </div>

            {/* Trust Indicators */}
            <div className="grid md:grid-cols-3 gap-4 max-w-2xl mx-auto text-sm text-muted-foreground">
              <div className="flex items-center justify-center gap-2">
                <CheckCircle className="w-4 h-4 text-accent" />
                <span>1000+ h·ªçc vi√™n ƒë√£ th√†nh c√¥ng</span>
              </div>
              <div className="flex items-center justify-center gap-2">
                <Star className="w-4 h-4 text-accent" />
                <span>4.9/5 ƒë√°nh gi√°</span>
              </div>
              <div className="flex items-center justify-center gap-2">
                <Award className="w-4 h-4 text-accent" />
                <span>Cam k·∫øt ho√†n ti·ªÅn 30 ng√†y</span>
              </div>
            </div>
          </div>
        </div>
        
        {/* Scroll Indicator */}
        <div className="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce">
          <ChevronDown className="w-8 h-8 text-primary" />
        </div>
      </section>

      {/* Section 2: Pain Points */}
      <section id="pain-points" className="py-20 bg-background-secondary">
        <div className="container mx-auto px-4">
          <div className="max-w-4xl mx-auto text-center">
            <h2 className="text-4xl md:text-5xl font-bold mb-16">
              B·∫°n c√≥ ƒëang g·∫∑p nh·ªØng <span className="text-gradient">v·∫•n ƒë·ªÅ n√†y?</span>
            </h2>
            
            <div className="grid md:grid-cols-2 gap-6 mb-12">
              {painPoints.map((point, index) => <Card key={index} className="robot-card circuit-pattern">
                  <CardContent className="p-6 text-center relative z-10">
                    <div className="text-4xl mb-4 floating" style={{
                  animationDelay: `${index * 0.5}s`
                }}>{point.icon}</div>
                    <p className="text-lg font-medium robot-text">{point.text}</p>
                  </CardContent>
                </Card>)}
            </div>
            
            <div className="text-center">
              <p className="text-2xl font-bold holographic mb-4" data-text="SOLUTION">
                "N·∫øu c√¢u tr·∫£ l·ªùi l√† C√ì, kh√≥a h·ªçc n√†y d√†nh cho b·∫°n!"
              </p>
              <Button size="lg" className="robot-btn bg-accent text-accent-foreground" onClick={() => scrollToSection('solution')}>
                <Bot className="mr-2 w-5 h-5 robot-pulse" />
                XEM GI·∫¢I PH√ÅP
                <ArrowRight className="ml-2 w-5 h-5" />
              </Button>
            </div>
          </div>
        </div>
      </section>

      {/* Section 3: Solution */}
      <section id="solution" className="py-20 hero-gradient">
        <div className="container mx-auto px-4">
          <div className="max-w-6xl mx-auto">
            <h2 className="text-4xl md:text-5xl font-bold text-center mb-16">
              Gi·∫£i ph√°p: <span className="text-gradient">AI + Quy tr√¨nh chu·∫©n</span> = MVP nhanh ch√≥ng
            </h2>
            
            <div className="glass rounded-2xl p-8 mb-12">
              <div className="overflow-x-auto">
                <table className="w-full text-lg">
                  <thead>
                    <tr className="border-b border-border/20">
                      <th className="text-left py-4 text-red-400">TR∆Ø·ªöC</th>
                      <th className="text-center py-4">VS</th>
                      <th className="text-left py-4 text-accent">SAU</th>
                    </tr>
                  </thead>
                  <tbody>
                    {beforeAfter.map((item, index) => <tr key={index} className="border-b border-border/10">
                        <td className="py-4 text-red-400">{item.before}</td>
                        <td className="text-center py-4">‚Üí</td>
                        <td className="py-4 text-accent font-semibold">{item.after}</td>
                      </tr>)}
                  </tbody>
                </table>
              </div>
            </div>
            
            <div className="text-center">
              <Button size="lg" className="bg-secondary text-secondary-foreground hover:bg-secondary/90 glow-hover" onClick={() => scrollToSection('curriculum')}>
                Kh√°m ph√° ch∆∞∆°ng tr√¨nh h·ªçc
                <ArrowRight className="ml-2 w-5 h-5" />
              </Button>
            </div>
          </div>
        </div>
      </section>

      {/* Section 4: Curriculum */}
      <section id="curriculum" className="py-20 bg-background">
        <div className="container mx-auto px-4">
          <div className="max-w-4xl mx-auto">
            <h2 className="text-4xl md:text-5xl font-bold text-center mb-16">
              Ch∆∞∆°ng tr√¨nh h·ªçc <span className="text-gradient">chi ti·∫øt</span>
            </h2>
            
            <div className="grid md:grid-cols-2 gap-6 mb-12">
              {curriculum.map((module, index) => <Card key={index} className="glass card-hover">
                  <CardContent className="p-6">
                    <div className="flex items-center gap-3 mb-4">
                      <div className="text-3xl">{module.icon}</div>
                      <div>
                        <h3 className="text-xl font-bold">PH·∫¶N {index + 1}: {module.title}</h3>
                        <p className="text-muted-foreground">({module.lessons} b√†i)</p>
                      </div>
                    </div>
                    <ul className="space-y-2">
                      {module.items.map((item, itemIndex) => <li key={itemIndex} className="flex items-start gap-2">
                          <CheckCircle className="w-5 h-5 text-accent mt-0.5 flex-shrink-0" />
                          <span className="text-sm">{item}</span>
                        </li>)}
                    </ul>
                  </CardContent>
                </Card>)}
            </div>
            
            {/* Bonus Section */}
            <Card className="glass glow">
              <CardContent className="p-6 text-center">
                <h3 className="text-2xl font-bold mb-4 text-gradient">üéÅ BONUS PACKAGE</h3>
                <div className="grid md:grid-cols-3 gap-4 text-sm">
                  <div className="flex items-center gap-2">
                    <CheckCircle className="w-4 h-4 text-accent" />
                    <span>Templates v√† prompts c√≥ s·∫µn</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <CheckCircle className="w-4 h-4 text-accent" />
                    <span>C·ªông ƒë·ªìng h·ªçc vi√™n private</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <CheckCircle className="w-4 h-4 text-accent" />
                    <span>1-1 support trong 30 ng√†y</span>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Section 5: Project Showcase */}
      <section id="project" className="py-20 bg-background-secondary">
        <div className="container mx-auto px-4">
          <div className="max-w-6xl mx-auto">
            <h2 className="text-4xl md:text-5xl font-bold text-center mb-16">
              D·ª± √°n th·ª±c t·∫ø: <span className="text-gradient">Website Sweet Home Bakery</span>
            </h2>
            
            <div className="grid lg:grid-cols-2 gap-12 mb-12">
              {/* Before */}
              <Card className="glass">
                <CardContent className="p-6">
                  <h3 className="text-xl font-bold mb-4 text-red-400">TR∆Ø·ªöC: √ù t∆∞·ªüng th√¥</h3>
                  <div className="bg-background-secondary rounded-lg p-4 h-48 flex items-center justify-center">
                    <div className="text-center text-muted-foreground">
                      <Code className="w-12 h-12 mx-auto mb-2" />
                      <p>Wireframe v·∫Ω tay</p>
                      <p className="text-sm">Kh√¥ng bi·∫øt code</p>
                    </div>
                  </div>
                </CardContent>
              </Card>
              
              {/* After */}
              <Card className="glass glow">
                <CardContent className="p-6">
                  <h3 className="text-xl font-bold mb-4 text-accent">SAU: Website ho√†n ch·ªânh</h3>
                  <div className="bg-gradient-primary rounded-lg p-4 h-48 flex items-center justify-center">
                    <div className="text-center text-white">
                      <Smartphone className="w-12 h-12 mx-auto mb-2" />
                      <p className="font-bold">Sweet Home Bakery</p>
                      <p className="text-sm">Professional & Responsive</p>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
            
            {/* Features Grid */}
            <div className="grid md:grid-cols-3 gap-6 mb-12">
              {projectFeatures.map((feature, index) => <Card key={index} className="glass card-hover">
                  <CardContent className="p-4 text-center">
                    <div className="text-2xl mb-2">{feature.icon}</div>
                    <p className="text-sm font-medium">{feature.text}</p>
                  </CardContent>
                </Card>)}
            </div>
            
            {/* Timeline */}
            <Card className="glass">
              <CardContent className="p-6">
                <h3 className="text-xl font-bold mb-6 text-center">Timeline 7 ng√†y</h3>
                <div className="grid md:grid-cols-4 gap-4 text-center">
                  <div>
                    <div className="text-primary font-bold">Ng√†y 1-2</div>
                    <p className="text-sm">Setup & Trang ch·ªß</p>
                  </div>
                  <div>
                    <div className="text-primary font-bold">Ng√†y 3-4</div>
                    <p className="text-sm">Catalog s·∫£n ph·∫©m</p>
                  </div>
                  <div>
                    <div className="text-primary font-bold">Ng√†y 5-6</div>
                    <p className="text-sm">Gi·ªè h√†ng & Checkout</p>
                  </div>
                  <div>
                    <div className="text-primary font-bold">Ng√†y 7</div>
                    <p className="text-sm">Polish & Deploy</p>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Section 6: Instructor */}
      <section id="instructor" className="py-20 hero-gradient">
        <div className="container mx-auto px-4">
          <div className="max-w-4xl mx-auto text-center">
            <h2 className="text-4xl md:text-5xl font-bold mb-16">
              V·ªÅ <span className="text-gradient">ng∆∞·ªùi h∆∞·ªõng d·∫´n</span>
            </h2>
            
            <Card className="glass glow">
              <CardContent className="p-8">
                <div className="w-24 h-24 bg-gradient-primary rounded-full mx-auto mb-6 flex items-center justify-center">
                  <Users className="w-12 h-12 text-white" />
                </div>
                
                <h3 className="text-2xl font-bold mb-2">AI Development Expert</h3>
                <div className="grid md:grid-cols-2 gap-4 mb-6 text-left">
                  <div className="flex items-center gap-2">
                    <CheckCircle className="w-4 h-4 text-accent" />
                    <span className="text-sm">5+ nƒÉm kinh nghi·ªám ph√°t tri·ªÉn ph·∫ßn m·ªÅm</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <CheckCircle className="w-4 h-4 text-accent" />
                    <span className="text-sm">ƒê√£ x√¢y d·ª±ng 50+ MVP v·ªõi AI</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <CheckCircle className="w-4 h-4 text-accent" />
                    <span className="text-sm">Mentor cho 1000+ h·ªçc vi√™n</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <CheckCircle className="w-4 h-4 text-accent" />
                    <span className="text-sm">Chuy√™n gia Claude, ChatGPT, GitHub Copilot</span>
                  </div>
                </div>
                
                <blockquote className="text-lg italic text-muted-foreground border-l-4 border-primary pl-4">
                  "T√¥i tin r·∫±ng m·ªçi ng∆∞·ªùi ƒë·ªÅu c√≥ th·ªÉ t·∫°o ra ph·∫ßn m·ªÅm n·∫øu c√≥ ƒë√∫ng quy tr√¨nh v√† c√¥ng c·ª•. 
                  AI ƒë√£ thay ƒë·ªïi ho√†n to√†n c√°ch ch√∫ng ta ti·∫øp c·∫≠n l·∫≠p tr√¨nh."
                </blockquote>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Section 7: Testimonials */}
      <section id="testimonials" className="py-20 bg-background">
        <div className="container mx-auto px-4">
          <div className="max-w-4xl mx-auto">
            <h2 className="text-4xl md:text-5xl font-bold text-center mb-16">
              H·ªçc vi√™n n√≥i g√¨ v·ªÅ <span className="text-gradient">kh√≥a h·ªçc</span>
            </h2>
            
            {/* Testimonials Carousel */}
            <div className="relative mb-12">
              <Card className="glass glow">
                <CardContent className="p-8 text-center">
                  <div className="flex justify-center mb-4">
                    {[...Array(testimonials[activeTestimonial].rating)].map((_, i) => <Star key={i} className="w-5 h-5 text-yellow-400 fill-current" />)}
                  </div>
                  <p className="text-lg mb-6 italic">"{testimonials[activeTestimonial].text}"</p>
                  <div>
                    <p className="font-bold text-primary">{testimonials[activeTestimonial].author}</p>
                    <p className="text-muted-foreground text-sm">{testimonials[activeTestimonial].role}</p>
                  </div>
                </CardContent>
              </Card>
              
              {/* Testimonial Dots */}
              <div className="flex justify-center gap-2 mt-6">
                {testimonials.map((_, index) => <button key={index} className={`w-3 h-3 rounded-full transition-colors ${index === activeTestimonial ? 'bg-primary' : 'bg-muted'}`} onClick={() => setActiveTestimonial(index)} />)}
              </div>
            </div>
            
            {/* Social Proof Numbers */}
            <div className="grid md:grid-cols-4 gap-6">
              {socialProof.map((stat, index) => <Card key={index} className="glass card-hover">
                  <CardContent className="p-6 text-center">
                    <div className="text-3xl font-bold text-gradient mb-2">{stat.number}</div>
                    <p className="text-sm text-muted-foreground">{stat.label}</p>
                  </CardContent>
                </Card>)}
            </div>
          </div>
        </div>
      </section>

      {/* Section 8: Pricing */}
      <section id="pricing" className="py-20 bg-background-secondary">
        <div className="container mx-auto px-4">
          <div className="max-w-6xl mx-auto">
            <h2 className="text-4xl md:text-5xl font-bold text-center mb-16">
              ƒê·∫ßu t∆∞ cho <span className="text-gradient">t∆∞∆°ng lai c·ªßa b·∫°n</span>
            </h2>
            
            <div className="grid lg:grid-cols-2 gap-8">
              {/* Free DIY Column */}
              <Card className="glass border-red-500/20">
                <CardContent className="p-8 text-center">
                  <h3 className="text-2xl font-bold mb-4">T·ª∞ H·ªåC MI·ªÑN PH√ç</h3>
                  <div className="text-4xl font-bold mb-6 text-red-400">$0</div>
                  <div className="space-y-3 text-left">
                    {["Kh√¥ng c√≥ roadmap r√µ r√†ng", "M·∫•t 6+ th√°ng m·ªõi c√≥ k·∫øt qu·∫£", "Kh√¥ng c√≥ support", "D·ªÖ b·ªè cu·ªôc gi·ªØa ch·ª´ng", "Ch·∫•t l∆∞·ª£ng kh√¥ng ƒë·∫£m b·∫£o"].map((item, index) => <div key={index} className="flex items-center gap-2">
                        <X className="w-4 h-4 text-red-400" />
                        <span className="text-sm">{item}</span>
                      </div>)}
                  </div>
                </CardContent>
              </Card>
              
              {/* Premium Course Column */}
              <Card className="glass glow border-primary/30 relative">
                <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                  <div className="bg-primary text-primary-foreground px-4 py-1 rounded-full text-sm font-bold">
                    RECOMMENDED
                  </div>
                </div>
                <CardContent className="p-8 text-center">
                  <h3 className="text-2xl font-bold mb-4">KH√ìA H·ªåC PREMIUM</h3>
                   <div className="mb-6">
                     <div className="text-sm text-muted-foreground line-through">29.999.000 ƒë</div>
                     <div className="text-4xl font-bold text-gradient">14.999.000 ƒë</div>
                     <div className="text-sm text-accent">(Limited time)</div>
                   </div>
                  <div className="space-y-3 text-left mb-8">
                    {["Roadmap 7 ng√†y chi ti·∫øt", "Templates & prompts s·∫µn c√≥", "1-1 support 30 ng√†y", "C·ªông ƒë·ªìng h·ªçc vi√™n private", "Cam k·∫øt ho√†n ti·ªÅn 30 ng√†y", "Lifetime access", "Free updates"].map((item, index) => <div key={index} className="flex items-center gap-2">
                        <CheckCircle className="w-4 h-4 text-accent" />
                        <span className="text-sm">{item}</span>
                      </div>)}
                  </div>
                  
                   <Button size="lg" className="w-full bg-primary text-primary-foreground hover:bg-primary/90 glow pulse-glow" onClick={() => scrollToSection('final-cta')}>
                     ƒêƒÇNG K√ù NGAY - 14.999.000 ƒë
                   </Button>
                </CardContent>
              </Card>
            </div>
            
            {/* Value Breakdown */}
            <Card className="glass mt-12">
              <CardContent className="p-6">
                <h3 className="text-xl font-bold text-center mb-6">Ph√¢n t√≠ch gi√° tr·ªã</h3>
                <div className="grid md:grid-cols-2 gap-8">
                   <div>
                     <h4 className="font-bold mb-4">Gi√° tr·ªã th·ª±c t·∫ø: 24.999.000 ƒë</h4>
                     <div className="space-y-2 text-sm">
                       <div className="flex justify-between">
                         <span>Kh√≥a h·ªçc:</span>
                         <span>15.000.000 ƒë</span>
                       </div>
                       <div className="flex justify-between">
                         <span>Templates:</span>
                         <span>4.999.000 ƒë</span>
                       </div>
                       <div className="flex justify-between">
                         <span>1-1 Support:</span>
                         <span>4.000.000 ƒë</span>
                       </div>
                       <div className="flex justify-between">
                         <span>C·ªông ƒë·ªìng:</span>
                         <span>1.000.000 ƒë</span>
                       </div>
                     </div>
                   </div>
                   <div className="text-center">
                     <div className="text-3xl font-bold text-gradient mb-2">14.999.000 ƒë</div>
                     <div className="text-accent font-bold">Ti·∫øt ki·ªám 10.000.000 ƒë!</div>
                    
                    {/* Urgency */}
                    <div className="mt-6 space-y-2">
                      <div className="flex items-center justify-center gap-2 text-red-400">
                        <Clock className="w-4 h-4" />
                        <span className="text-sm">Ch·ªâ c√≤n {timeLeft.hours}:{timeLeft.minutes.toString().padStart(2, '0')}:{timeLeft.seconds.toString().padStart(2, '0')} v·ªõi gi√° ƒë·∫∑c bi·ªát</span>
                      </div>
                      <div className="flex items-center justify-center gap-2 text-red-400">
                        <Users className="w-4 h-4" />
                        <span className="text-sm">Ch·ªâ c√≤n 27 su·∫•t cu·ªëi c√πng</span>
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Section 9: FAQ */}
      <section id="faq" className="py-20 bg-background">
        <div className="container mx-auto px-4">
          <div className="max-w-4xl mx-auto">
            <h2 className="text-4xl md:text-5xl font-bold text-center mb-16">
              C√¢u h·ªèi <span className="text-gradient">th∆∞·ªùng g·∫∑p</span>
            </h2>
            
            <div className="space-y-4">
              {faqs.map((faq, index) => <Card key={index} className="glass">
                  <CardContent className="p-0">
                    <button className="w-full text-left p-6 flex justify-between items-center hover:bg-muted/10 transition-colors" onClick={() => setActiveFAQ(activeFAQ === index ? null : index)}>
                      <span className="font-semibold">‚ùì {faq.question}</span>
                      <ChevronDown className={`w-5 h-5 transition-transform ${activeFAQ === index ? 'rotate-180' : ''}`} />
                    </button>
                    {activeFAQ === index && <div className="px-6 pb-6">
                        <div className="border-t border-border/20 pt-4">
                          <p className="text-muted-foreground">‚úÖ {faq.answer}</p>
                        </div>
                      </div>}
                  </CardContent>
                </Card>)}
            </div>
          </div>
        </div>
      </section>

      {/* Section 10: Final CTA */}
      <section id="final-cta" className="py-20 hero-gradient">
        <div className="container mx-auto px-4">
          <div className="max-w-4xl mx-auto text-center">
            <h2 className="text-4xl md:text-6xl font-bold mb-6">
              S·∫µn s√†ng thay ƒë·ªïi <span className="text-gradient">career c·ªßa b·∫°n?</span>
            </h2>
            
            <p className="text-xl md:text-2xl text-muted-foreground mb-12">
              Tham gia c√πng 1000+ h·ªçc vi√™n ƒë√£ th√†nh c√¥ng
              <br />
              T·ª´ √Ω t∆∞·ªüng ƒë·∫øn MVP ch·ªâ trong 7 ng√†y
            </p>
            
            {/* Final Offer Box */}
            <Card className="glass glow mb-12">
              <CardContent className="p-8">
                <h3 className="text-2xl font-bold mb-6 text-gradient">üéØ ƒêƒÇNG K√ù NGAY - CH·ªà 14.999.000 ƒë</h3>
                <div className="grid md:grid-cols-2 gap-4 mb-8 text-sm">
                   <div className="flex items-center gap-2">
                     <CheckCircle className="w-4 h-4 text-accent" />
                     <span>T·∫∑ng k√®m 10.000.000 ƒë bonus materials</span>
                   </div>
                  <div className="flex items-center gap-2">
                    <Clock className="w-4 h-4 text-red-400" />
                    <span>∆Øu ƒë√£i k·∫øt th√∫c trong {timeLeft.hours}:{timeLeft.minutes.toString().padStart(2, '0')}:{timeLeft.seconds.toString().padStart(2, '0')}</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <Shield className="w-4 h-4 text-accent" />
                    <span>Cam k·∫øt ho√†n ti·ªÅn 30 ng√†y</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <Award className="w-4 h-4 text-accent" />
                    <span>Lifetime access + updates</span>
                  </div>
                </div>
                
                 <Button size="lg" className="w-full max-w-md mx-auto bg-primary text-primary-foreground hover:bg-primary/90 glow pulse-glow text-xl py-6" onClick={() => window.open('https://zalo.me/84708684608', '_blank')}>
                   ƒêƒÇNG K√ù NGAY - 14.999.000 ƒë
                   <ArrowRight className="ml-2 w-6 h-6" />
                 </Button>
                
                {/* Security Badges */}
                <div className="grid md:grid-cols-3 gap-4 mt-8 text-xs text-muted-foreground">
                  <div className="flex items-center justify-center gap-1">
                    <Shield className="w-3 h-3" />
                    <span>Thanh to√°n an to√†n</span>
                  </div>
                  <div className="flex items-center justify-center gap-1">
                    <CheckCircle className="w-3 h-3" />
                    <span>Visa, Mastercard, PayPal</span>
                  </div>
                  <div className="flex items-center justify-center gap-1">
                    <Shield className="w-3 h-3" />
                    <span>B·∫£o m·∫≠t SSL 256-bit</span>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Contact Section */}
      <section id="contact" className="py-20 bg-background-secondary">
        <div className="container mx-auto px-4">
          <div className="max-w-4xl mx-auto text-center">
            <h2 className="text-4xl md:text-5xl font-bold mb-16">
              Li√™n h·ªá <span className="text-gradient">v·ªõi ch√∫ng t√¥i</span>
            </h2>
            
            <div className="grid md:grid-cols-3 gap-8 mb-12">
              {/* Zalo Contact */}
              <Card className="glass glow card-hover">
                <CardContent className="p-6 text-center">
                  <MessageCircle className="w-12 h-12 mx-auto mb-4 text-primary robot-pulse" />
                  <h3 className="text-xl font-bold mb-2">Zalo</h3>
                  <p className="text-muted-foreground mb-4">0708684608</p>
                  <Button className="w-full robot-btn bg-primary text-primary-foreground" onClick={() => window.open('https://zalo.me/84708684608', '_blank')}>
                    Chat ngay tr√™n Zalo
                  </Button>
                </CardContent>
              </Card>

              {/* Phone Contact */}
              <Card className="glass">
                <CardContent className="p-6 text-center">
                  <Phone className="w-12 h-12 mx-auto mb-4 text-accent robot-pulse" />
                  <h3 className="text-xl font-bold mb-2">ƒêi·ªán tho·∫°i</h3>
                  <p className="text-muted-foreground mb-4">0708684608</p>
                  <Button variant="outline" className="w-full robot-card border-primary text-primary" onClick={() => window.open('tel:0708684608', '_self')}>
                    G·ªçi ngay
                  </Button>
                </CardContent>
              </Card>

              {/* Address */}
              <Card className="glass">
                <CardContent className="p-6 text-center">
                  <MapPin className="w-12 h-12 mx-auto mb-4 text-secondary robot-pulse" />
                  <h3 className="text-xl font-bold mb-2">ƒê·ªãa ch·ªâ</h3>
                  <p className="text-muted-foreground mb-4">Landmark 81, Qu·∫≠n B√¨nh Th·∫°nh, TPHCM</p>
                  <Button variant="outline" className="w-full robot-card border-primary text-primary" onClick={() => window.open('https://maps.google.com/?q=Landmark+81,+Qu·∫≠n+B√¨nh+Th·∫°nh,+TPHCM', '_blank')}>
                    Xem b·∫£n ƒë·ªì
                  </Button>
                </CardContent>
              </Card>
            </div>

            {/* Final CTA */}
            <Card className="glass glow">
              <CardContent className="p-8">
                <h3 className="text-2xl font-bold mb-4 text-gradient">üí¨ T∆∞ v·∫•n mi·ªÖn ph√≠ qua Zalo</h3>
                <p className="text-muted-foreground mb-6">
                  C√≥ th·∫Øc m·∫Øc v·ªÅ kh√≥a h·ªçc? Chat v·ªõi ch√∫ng t√¥i ngay ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n chi ti·∫øt
                </p>
                <Button size="lg" className="robot-btn bg-primary text-primary-foreground glow pulse-glow" onClick={() => window.open('https://zalo.me/84708684608', '_blank')}>
                  <MessageCircle className="mr-2 w-5 h-5" />
                  Chat Zalo mi·ªÖn ph√≠
                  <ArrowRight className="ml-2 w-5 h-5" />
                </Button>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Sticky Bottom CTA on Mobile */}
      <div className="fixed bottom-0 left-0 right-0 p-4 bg-background/90 backdrop-blur-sm border-t border-border/20 md:hidden z-50">
         <Button className="w-full bg-primary text-primary-foreground hover:bg-primary/90 glow" onClick={() => window.open('https://zalo.me/84708684608', '_blank')}>
           ƒêƒÉng k√Ω ngay - 14.999.000 ƒë
         </Button>
      </div>
    </div>;
};
export default AICourseLanding;